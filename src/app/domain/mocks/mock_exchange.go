// Code generated by MockGen. DO NOT EDIT.
// Source: genesis-test/src/app/domain (interfaces: ExchangeRepository,ExchangeService)

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	domain "genesis-test/src/app/domain"
	config "genesis-test/src/config"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExchangeRepository is a mock of ExchangeRepository interface.
type MockExchangeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeRepositoryMockRecorder
}

// MockExchangeRepositoryMockRecorder is the mock recorder for MockExchangeRepository.
type MockExchangeRepositoryMockRecorder struct {
	mock *MockExchangeRepository
}

// NewMockExchangeRepository creates a new mock instance.
func NewMockExchangeRepository(ctrl *gomock.Controller) *MockExchangeRepository {
	mock := &MockExchangeRepository{ctrl: ctrl}
	mock.recorder = &MockExchangeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchangeRepository) EXPECT() *MockExchangeRepositoryMockRecorder {
	return m.recorder
}

// GetCurrencyRate mocks base method.
func (m *MockExchangeRepository) GetCurrencyRate(arg0, arg1 string) (*domain.CurrencyRate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrencyRate", arg0, arg1)
	ret0, _ := ret[0].(*domain.CurrencyRate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrencyRate indicates an expected call of GetCurrencyRate.
func (mr *MockExchangeRepositoryMockRecorder) GetCurrencyRate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrencyRate", reflect.TypeOf((*MockExchangeRepository)(nil).GetCurrencyRate), arg0, arg1)
}

// MockExchangeService is a mock of ExchangeService interface.
type MockExchangeService struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeServiceMockRecorder
}

// MockExchangeServiceMockRecorder is the mock recorder for MockExchangeService.
type MockExchangeServiceMockRecorder struct {
	mock *MockExchangeService
}

// NewMockExchangeService creates a new mock instance.
func NewMockExchangeService(ctrl *gomock.Controller) *MockExchangeService {
	mock := &MockExchangeService{ctrl: ctrl}
	mock.recorder = &MockExchangeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchangeService) EXPECT() *MockExchangeServiceMockRecorder {
	return m.recorder
}

// GetCurrencyRate mocks base method.
func (m *MockExchangeService) GetCurrencyRate(arg0 *config.Config) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrencyRate", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrencyRate indicates an expected call of GetCurrencyRate.
func (mr *MockExchangeServiceMockRecorder) GetCurrencyRate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrencyRate", reflect.TypeOf((*MockExchangeService)(nil).GetCurrencyRate), arg0)
}
